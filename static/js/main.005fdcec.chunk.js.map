{"version":3,"sources":["components/Jaxtapose.js","App.js","index.js"],"names":["Jaxtapose","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resize","setState","componentWidth","ReactDOM","findDOMNode","refs","wrapperElement","getBoundingClientRect","width","state","position","undefined","onMouseMove","bind","assertThisInitialized","onClick","inherits","createClass","key","value","p","e","cx","touches","clientX","setPosition","currentTarget","offsetLeft","clientWidth","window","removeEventListener","addEventListener","childStyle","height","top","transform","display","children","child0","React","cloneElement","style","objectSpread","left","child1","right","react_default","a","createElement","ref","className","onTouchMove","borderColor","delimeterColor","fontSize","leftText","rightText","Component","App","components_Jaxtapose","src","alt","start","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.005fdcec.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/tstx_jaxtapose.css'\n\n/**\n* You must set two children in component\n*/\nexport class Jaxtapose extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: this.props.position || 50,\n            componentWidth: undefined\n        };\n        this.wrapperElement = null;\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    setPosition(p) {\n        if (p < 0) p = 0\n        else if (p > 100) p = 100\n        this.setState({\n            position: p\n        });\n    }\n\n    onMouseMove(e) {\n        const cx = e.touches ? e.touches[0].clientX: e.clientX;\n        this.setPosition((cx - e.currentTarget.offsetLeft) / e.currentTarget.clientWidth * 100);\n    }\n\n    onClick(e) {\n\n    }\n\n    resize = () => {\n        this.setState({\n            componentWidth: ReactDOM.findDOMNode(this.refs.wrapperElement).getBoundingClientRect().width\n        })\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n        this.resize();\n    }\n\n    render() {\n        // const width = (this.props.width || 400) + 'px';\n        // const height = (this.props.height || 300) + 'px';\n        // const wrStyle = {\n        //     width: width,\n        //     height: height\n        // };\n        const childStyle = {\n            position: 'absolute',\n            //width: 'auto',\n            height: 'auto',\n            top: '50%',\n            transform: 'translateY(-50%)'\n        };\n        if (this.state.componentWidth > 0) {\n            childStyle.width = this.state.componentWidth + 'px';\n        }\n        else {\n            childStyle.display = 'none';\n        }\n        const { children } = this.props;\n        const child0 = React.cloneElement(children[0], {\n            style: {...children[0].props.style, ...childStyle, left: 0}\n        });\n        const child1 = React.cloneElement(children[1], {\n            style: {...children[1].props.style, ...childStyle, right: 0}\n        });\n        return (\n            <div ref=\"wrapperElement\" className=\"tstx_jaxtapose_wr\" onTouchMove={this.onMouseMove} onMouseMove={this.onMouseMove} onClick={this.onClick}>\n                <div className=\"tstx_jax_slide __left\" style={{width: this.state.position+'%'}}>\n                    {child0}\n                </div>\n                <div className=\"tstx_jax_slide __right\" style={{width: 100-this.state.position+'%'}}>\n                    {child1}\n                </div>\n                <div className=\"tstx-jaxtapose_delimeter\" style={{left:this.state.position+'%', borderColor: this.props.delimeterColor}}></div>\n                <p className=\"tstx_jax_label __left\" style={{fontSize: this.props.fontSize+'px'}}>{this.props.leftText}</p>\n                <p className=\"tstx_jax_label __right\" style={{fontSize: this.props.fontSize+'px'}}>{this.props.rightText}</p>\n            </div>\n        );\n    }\n}\n\nexport default Jaxtapose\n","import React from 'react';\nimport Jaxtapose from './components/Jaxtapose'\n\nclass App extends React.Component {\n  render() {\n    return (\n        <Jaxtapose leftText={`Left title`} rightText={`Right title`}>\n            <img className=\"123\" src={`http://localhost:3000/1.jpg`} alt=\"\"/>\n            <img src={`http://localhost:3000/2.jpg`} alt=\"\"/>\n        </Jaxtapose>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\nimport './components/testix_main.scss'\n\nwindow.start = function() {\n    ReactDOM.render(\n        <App/>\n    , document.getElementById('root'));\n}\n\nwindow.start()"],"sourceRoot":""}